{
  "_args": [
    [
      {
        "raw": "phaser",
        "scope": null,
        "escapedName": "phaser",
        "name": "phaser",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/psinghal/Phaser-game"
    ]
  ],
  "_from": "phaser@latest",
  "_id": "phaser@2.6.2",
  "_inCache": true,
  "_location": "/phaser",
  "_nodeVersion": "5.6.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/phaser-2.6.2.tgz_1472171960524_0.1596319682430476"
  },
  "_npmUser": {
    "name": "photonstorm",
    "email": "rdavey@gmail.com"
  },
  "_npmVersion": "3.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "phaser",
    "scope": null,
    "escapedName": "phaser",
    "name": "phaser",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/phaser/-/phaser-2.6.2.tgz",
  "_shasum": "eb39121725a2149c49f46b5d144318c22bc09249",
  "_shrinkwrap": null,
  "_spec": "phaser",
  "_where": "/home/psinghal/Phaser-game",
  "author": {
    "name": "Richard Davey",
    "email": "rdavey@gmail.com",
    "url": "http://www.photonstorm.com"
  },
  "bugs": {
    "url": "https://github.com/photonstorm/phaser/issues"
  },
  "dependencies": {},
  "description": "A fast, free and fun HTML5 Game Framework for Desktop and Mobile web browsers.",
  "devDependencies": {
    "eslint": "^3.3.1",
    "grunt": "^0.4.5",
    "grunt-contrib-clean": "^0.5.0",
    "grunt-contrib-concat": "^0.4.0",
    "grunt-contrib-connect": "^0.7.1",
    "grunt-contrib-copy": "^0.5.0",
    "grunt-contrib-jshint": "^1.0.0",
    "grunt-contrib-uglify": "^0.4.0",
    "grunt-eslint": "^19.0.0",
    "grunt-git": "^0.3.3",
    "grunt-jsdoc": "~0.6.2-beta",
    "grunt-notify": "^0.3.0",
    "grunt-text-replace": "^0.3.11",
    "jsdoc": "^3.4.0",
    "load-grunt-config": "~0.7.2",
    "typescript": "1.4.1",
    "yuidocjs": "^0.3.50"
  },
  "directories": {},
  "dist": {
    "shasum": "eb39121725a2149c49f46b5d144318c22bc09249",
    "tarball": "https://registry.npmjs.org/phaser/-/phaser-2.6.2.tgz"
  },
  "gitHead": "dd39f9ab08d57fa1bacd1287ccadb03fb3151267",
  "homepage": "http://phaser.io",
  "keywords": [
    "2d",
    "HTML5",
    "WebGL",
    "canvas",
    "game",
    "javascript",
    "physics",
    "tweens",
    "typescript",
    "web audio"
  ],
  "license": "MIT",
  "licenseUrl": "http://www.opensource.org/licenses/mit-license.php",
  "logo": "https://raw.github.com/photonstorm/phaser/master/phaser-logo-small.png",
  "main": "./build/phaser.js",
  "maintainers": [
    {
      "name": "photonstorm",
      "email": "rdavey@gmail.com"
    }
  ],
  "name": "phaser",
  "optionalDependencies": {},
  "readme": "# Phaser - HTML5 Game Framework\n\n<img src=\"http://phaser.io/images/github/arcade-cab.png\" align=\"right\">\n\nPhaser is a fast, free, and fun open source HTML5 game framework. It uses a custom build of [Pixi.js](https://github.com/GoodBoyDigital/pixi.js/) for WebGL and Canvas rendering, and supports desktop and mobile web browsers. Games can be compiled to iOS, Android and native desktop apps via 3rd party tools. You can use JavaScript or TypeScript for development.\n\nAlong with the fantastic open source community, Phaser is actively developed and maintained by [Photon Storm](http://www.photonstorm.com). As a result of rapid support, and a developer friendly API, Phaser is currently one of the [most starred](https://github.com/showcases/javascript-game-engines) game frameworks on GitHub.\n\nThousands of developers worldwide use Phaser. From indies and multi-national digital agencies, to schools and Universities. Each creating their own incredible [games](http://phaser.io/games/).\n\n**Visit:** The [Phaser website](http://phaser.io) and follow on [Twitter](https://twitter.com/photonstorm) (#phaserjs)<br />\n**Learn:** [API Docs](http://phaser.io/docs), [Support Forum][forum] and [StackOverflow](http://stackoverflow.com/questions/tagged/phaser-framework)<br />\n**Code:** 700+ [Examples](http://phaser.io/examples) (source available in this [repo][examples])<br />\n**Read:** Weekly [Phaser World](#newsletter) Newsletter<br />\n**Chat:** [Slack](http://phaser.io/community/slack) and [IRC](http://phaser.io/community/irc)<br />\n**Extend:** With [Phaser Plugins](http://phaser.io/shop/plugins)<br />\n**Be awesome:** [Support](#support) the future of Phaser<br />\n\nGrab the source and join in the fun!\n\n## Contents\n\n- [What's New?](#whats-new)\n- [Support Phaser](#support)\n- [Phaser World Newsletter](#newsletter)\n- [Download Phaser](#download)\n- [Getting Started](#getting-started)\n- [Building Phaser](#building-phaser)\n- [Games made with Phaser](#games)\n- [Requirements](#requirements)\n- [Road Map](#road-map)\n- [Change Log](#change-log)\n- [Lazer](#lazer)\n- [Contributing](#contributing)\n\n<a name=\"whats-new\"></a>\n![What's New](http://phaser.io/images/github/div-whats-new.png \"What's New\")\n\n<div align=\"center\"><img src=\"http://phaser.io/images/github/news.jpg\"></div>\n\n> 26th August 2016\n\nSummer is nearly over, the nights are drawing in, and the Phaser releases continue. After enjoying a short break in August, we're back with Phaser 2.6.2. This is mostly a maintenance release, with a lot of attention paid to clearing bugs, and improving features. There's also some significant updates to our fork of Pixi, setting the scene for the next iteration of Phaser.\n\nCheck the [Change Log](#change-log) for the complete list of what's new and updated.\n\nWith 2.6.2 out, we'll now turn our attention to merging in all of the renderer updates we've built over the past few months. They are going to form the basis of the Phaser 3.0 release. The bump in version number due to the dramatic internal changes we're making. Follow our progress in the Phaser World newsletter for details. It's going to be an exciting September for sure :)\n\nAs always, keep you eyes on the Phaser web site, and subscribe to our weekly [newsletter](#newsletter). You can also follow me on [Twitter](https://twitter.com/photonstorm) or chat to me in the Phaser [Slack](http://phaser.io/community/slack) channel.\n\nThere are also now more ways than before to help [support](#support) the development of Phaser. The uptake so far has been fantastic, but this is an on-going mission. Thank you to everyone who supports our development. Who shares our belief in the future of HTML5 gaming, and Phasers role in that.\n\nHappy coding everyone! See you on the forums.\n\nCheers,\n\nRich - [@photonstorm](https://twitter.com/photonstorm)\n\n![boogie](http://www.phaser.io/images/spacedancer.gif)\n\n<a name=\"support\"></a>\n![Support Phaser](http://phaser.io/images/github/div-support-phaser.png \"Support Phaser\")\n\nDeveloping Phaser takes a lot of time, effort, and money. There are monthly running costs; such as the forum and site, which we maintain 100% ad-free. As well as countless hours of development time, community support, and assistance resolving issues. We do this out of our love for Phaser of course, but at the end of the day there are real tangible costs involved.\n\nIf you have found Phaser useful in your development life. Or have made income as a result of using it, and are in a position to support us financially, without causing any detriment to yourself, then please do. There are a number of ways:\n\n* A monthly contribution via [Patreon](https://www.patreon.com/photonstorm). \n* A [one-off donation](http://phaser.io/community/donate) via PayPal.\n* Purchase any of our [plugins or books](http://phaser.io/shop).\n* Companies can sponsor a release of Phaser, or an issue of our newsletter.\n \nIt all helps cover our running costs, and genuinely contributes towards future development.\n\nIf you would like to sponsor Phaser then please [get in touch](mailto:support@phaser.io). We have sponsorship options available on our GitHub repo, web site, and newsletter. All of which receive tens of thousands of eyeballs per day.\n\n![Weekly Newsletter](http://phaser.io/images/github/div-newsletter.png \"Weekly Newsletter\")\n<a name=\"newsletter\"></a>\n\n<div align=\"center\"><img src=\"http://phaser.io/images/github/phaser-world.png\"></div>\n\nEvery Friday we publish the [Phaser World](http://phaser.io/community/newsletter) newsletter. It's packed full of the latest Phaser games, tutorials, videos, meet-ups, talks, and more. It also contains our weekly Development Progress updates.\n\nPrevious editions can found on our [Back Issues](http://phaser.io/community/backissues) page.\n\n![Download Phaser](http://phaser.io/images/github/div-download.png \"Download Phaser\")\n<a name=\"download\"></a>\n\nPhaser is [hosted on Github][phaser]. There are a number of ways to download it:\n\n* Clone the git repository via [https][clone-http], [ssh][clone-ssh] or with the Github [Windows][clone-ghwin] or [Mac][clone-ghmac] clients.\n* Download as [zip][get-zip] or [tar.gz][get-tgz]\n* Download just the build files: [phaser.js][get-js] and [phaser.min.js][get-minjs]\n* Checkout with [svn][clone-svn]\n\n### Bower / npm\n\nInstall via [bower](http://bower.io)\n\n`bower install phaser`\n\nInstall via [npm](https://www.npmjs.com)\n\n`npm install phaser`\n\nUsing Browserify? Please [read this](#browserify).\n\n### CDN\n\n[jsDelivr](http://www.jsdelivr.com/#!phaser) is a \"super-fast CDN for developers\". Include the following in your html:\n\n`<script src=\"//cdn.jsdelivr.net/phaser/2.6.2/phaser.js\"></script>`\n\nor the minified version:\n\n`<script src=\"//cdn.jsdelivr.net/phaser/2.6.2/phaser.min.js\"></script>`\n\n[cdnjs.com](https://cdnjs.com/libraries/phaser) also offers a free CDN service. They have all versions of Phaser and even the custom builds:\n\n`<script src=\"https://cdnjs.cloudflare.com/ajax/libs/phaser/2.6.2/phaser.js\"></script>`\n\n### Phaser Sandbox\n\nIf you'd like to try coding in Phaser right now, with nothing more than your web browser, then head over to the [Phaser Sandbox](http://phaser.io/sandbox). You'll find Quick Start templates, and a user-friendly editor filled with handy code-completion features.\n\n### License\n\nPhaser is released under the [MIT License](http://opensource.org/licenses/MIT).\n\n![Getting Started](http://phaser.io/images/github/div-getting-started.png \"Getting Started\")\n<a name=\"getting-started\"></a>\n\n<img src=\"http://phaser.io/images/github/learn.jpg\" align=\"right\">\n\nOur [Getting Started Guide](http://phaser.io/tutorials/getting-started) will get you up to speed quickly. From setting up a web server, to picking an IDE. After which read our [Making your first Game](http://phaser.io/tutorials/making-your-first-phaser-game) tutorial. Please work through this, no matter what your development experience, to learn how Phaser approaches things.\n\nThe single biggest Phaser resource is the [Phaser web site](http://phaser.io/news). You'll find hundreds of tutorials, with new ones added every week. Subscribe to the [Phaser World](http://phaser.io/community/newsletter) newsletter for a weekly links round-up.\n\nUsing **TypeScript**? [Game From Scratch](http://www.gamefromscratch.com/page/Adventures-in-Phaser-with-TypeScript-tutorial-series.aspx) has a great series of tutorials covering that.\n\nPrefer **videos**? Zenva have an excellent [Phaser video course](https://academy.zenva.com/product/the-complete-mobile-game-development-course-platinum-edition/?a=13), with hours of great material.\n\n### Source Code Examples\n\nEver since we started Phaser we've been growing and expanding our extensive set of examples. Currently there are over 700 of them, with the full source code and assets available.\n\nBrowse the [Phaser Examples](http://phaser.io/examples), or clone the [examples repo][examples], and eat your heart out!\n\n### Interphase\n\n<div align=\"center\"><img src=\"http://phaser.io/content/interphase/1/images/editorial/pages.jpg\"></div>\n\n[Interphase](http://phaser.io/interphase) is a programming book for Phaser developers of all skill levels.\n\nWith 400 pages of content you'll find detailed articles, game development \"Making Of\" guides and tutorials. All were written using the latest version of Phaser, so you won't be learning any out-dated tricks.\n\nAs well as the [book](http://phaser.io/interphase) you get all the source code, graphics and assets to go with it, and lots of extras too.\n\n### Phaser Editor - A complete Phaser Editor\n\n[Phaser Editor](http://phaser.io/shop/apps/phaser-editor) is a brand new Eclipse based editor that offers lots of built-in tools specifically for Phaser developers. Handy features include Smart code auto-completion, built-in web server, documentation search, asset management, texture atlas creator, audio sprite creator, asset previews and lots more.\n\n### Game Mechanic Explorer\n\nThe [Game Mechanic Explorer](http://gamemechanicexplorer.com) is a great interactive way to learn how to develop specific game mechanics in Phaser. Well worth exploring once you've got your dev environment set-up.\n\n### Mighty Editor - Visual Game Editor\n\n[MightyEditor](http://mightyfingers.com/) is a browser-based visual Phaser game editor. Create your maps with ease, position objects and share them in seconds. It also exports to native Phaser code. Excellent for quickly setting-up levels and scenes.\n\n![Building Phaser](http://phaser.io/images/github/div-building-phaser.png \"Building Phaser\")\n<a name=\"building-phaser\"></a>\n\nPhaser is provided ready compiled in the `build` folder of the repository. There are both plain and minified versions. The plain version is for use during development, and the minified version for production. You can also create your own builds.\n\n### Custom Builds\n\nPhaser includes a grunt based build system, which allows you to strip out  features you may not require, saving hundreds of KB in the process. Don't use any Sound in your game? Then exclude the entire sound system. Don't need Keyboard support? That can be excluded too.\n\nAs a result of this work the minimum build size of Phaser is now just 80KB minified and gzipped.\n\nSee the [Creating a Custom Phaser Build](http://phaser.io/tutorials/creating-custom-phaser-builds) tutorial for details.\n\n<a name=\"browserify\"></a>\n### Browserify / CJS\n\nPhaser was never written to be modular. Everything exists under one single global namespace, and you cannot `require` selected parts of it into your builds. It expects 3 global vars to exist in order to work properly: `Phaser`, `PIXI` and `p2`. The following is one way of doing this:\n\n```\nwindow.PIXI = require('phaser/build/custom/pixi')\nwindow.p2 = require('phaser/build/custom/p2')\nwindow.Phaser = require('phaser/build/custom/phaser-split')\n```\n\nIf you build a custom version of Phaser it will split the 3 core libs out into their own files, allowing you to require them as above.\n\nWe appreciate this is just a band-aid, and not a proper use of modules, but please understand it was never built to be used this way. You're trying to fit a square peg in a round browserify-shaped hole, so compromises have to be made. Please don't open GitHub issues about it as we've no intention of changing Phaser at this stage of its life. Full module based development is being undertaken in Lazer, the next iteration of the Phaser framework.\n\n### Webpack\n\nStarting from Phaser 2.4.5 we now include a custom build for Webpack.\n\nYou need to add `p2` as a dependency.\n\n##### Webpack Config\n\n```\nvar path = require('path');\nvar webpack = require('webpack');\n\nvar phaserModule = path.join(__dirname, '/node_modules/phaser/');\nvar phaser = path.join(phaserModule, 'build/custom/phaser-split.js'),\n  pixi = path.join(phaserModule, 'build/custom/pixi.js'),\n  p2 = path.join(phaserModule, 'build/custom/p2.js');\n\nmodule.exports = {\n    ...\n    module: {\n        loaders: [\n            { test: /pixi.js/, loader: \"script\" },\n        ]\n    },\n    resolve: {\n        alias: {\n            'phaser': phaser,\n            'pixi.js': pixi,\n            'p2': p2,\n        }\n    }\n    ...\n}\n```\n\n##### Main js file\n\n```\nrequire('pixi.js');\nrequire('p2');\nrequire('phaser');\n```\n\n### Building from source\n\nShould you wish to build Phaser from source you can take advantage of the provided [Grunt](http://gruntjs.com/) scripts. Ensure you have the required packages by running `npm install` first.\n\nRun `grunt` to perform a default build to the `dist` folder.\n\n![Made With Phaser](http://phaser.io/images/github/div-made-with.png \"Made With Phaser\")\n<a name=\"games\"></a>\n\nThousands of [games](http://phaser.io/news/category/game) have been made in Phaser. From game jam entries, to titles by some of the largest entertainment brands in the world. Here is a tiny sample. You can find hundreds more on our web site.\n\n[![Game](http://phaser.io/images/github/241/bubble-academy.png)][game10]\n[![Game](http://phaser.io/images/github/241/woodventure.png)][game11]\n[![Game](http://phaser.io/images/github/241/hopsop.png)][game12]\n[![Game](http://phaser.io/images/github/241/banana-mania.png)][game13]\n[![Game](http://phaser.io/images/github/241/salazar.png)][game14]\n[![Game](http://phaser.io/images/github/241/phaser-shmup.png)][game15]\n[![Game](http://phaser.io/images/github/241/trappy-trap.png)][game16]\n[![Game](http://phaser.io/images/github/241/runaway-ruins.png)][game17]\n[![Game](http://phaser.io/images/github/241/ananias.png)][game18]\n[![Game](http://phaser.io/images/github/shot1a.jpg)][game1]\n[![Game](http://phaser.io/images/github/shot2a.jpg)][game2]\n[![Game](http://phaser.io/images/github/shot3a.jpg)][game3]\n[![Game](http://phaser.io/images/github/shot4a.jpg)][game4]\n[![Game](http://phaser.io/images/github/shot5b.jpg)][game5]\n[![Game](http://phaser.io/images/github/shot6b.jpg)][game6]\n[![Game](http://phaser.io/images/github/shot7b.jpg)][game7]\n[![Game](http://phaser.io/images/github/shot8.jpg)][game8]\n[![Game](http://phaser.io/images/github/shot9.jpg)][game9]\n\nArtwork copyright their respective owners.\n\nWe add [new games](http://phaser.io/news/category/game) to the Phaser site weekly, so be sure to send us yours when it's finished!\n\n![Requirements](http://phaser.io/images/github/div-requirements.png \"Requirements\")\n<a name=\"requirements\"></a>\n\nPhaser requires a web browser that supports the [canvas tag](http://caniuse.com/#feat=canvas). This includes Internet Explorer 9+, Firefox, Chrome, Safari and Opera on desktop. iOS Safari, Android Browser and Chrome for Android are supported on mobile.\n\nWhile Phaser does its best to ensure a consistent cross-platform experience, always be aware of browser and device limitations. This is especially important with memory and GPU limitations on mobile, and legacy browser HTML5 compatibility.\n\n### IE9\n\nIf you need to support IE9 / Android 2.x _and_ use P2 physics, then you must use the polyfill in the `resources/IE9 Polyfill` folder. If you don't use P2 (or don't care about IE9!) you can skip this.\n\n### JavaScript and TypeScript\n\nPhaser is developed in ES5 JavaScript. We've made no assumptions about how you like to code, and were careful not to impose a strict structure upon you. You won't find Phaser split into modules, requiring a build step, or making you use a class / inheritance OOP approach. That doesn't mean you can't do so, it just means we don't _force_ you to. It's your choice.\n\nIf you code with [TypeScript](http://www.typescriptlang.org/) there are comprehensive definition files in the `typescript` folder. They are for TypeScript 1.4+.\n\n![Road Map](http://phaser.io/images/github/div-roadmap.png \"Road Map\")\n<a name=\"road-map\"></a>\n\nThe majority of Phaser development is now taking place within the [Lazer](https://github.com/photonstorm/lazer) project. Lazer is the name for Phaser version 3. The Phaser 2 branch will still be supported, and issues fixed, but most roadmap features have been migrated over.\n\n<a name=\"lazer\"></a>\n## Lazer\n\n[Lazer](https://github.com/photonstorm/lazer) is the next generation of the Phaser game framework, and was previously called Phaser 3. Using a completely ES6 base it is renderer agnostic, allowing for DOM, SVG, Canvas and WebGL rendering, across desktop and mobile web browsers.\n\n**Lazer is in active development, but is not yet ready for production use.**\n\nYou can read all about the philosophy behind Lazer [here](http://phaser.io/news/2016/01/phaser-in-2015-and-beyond) or join the Google Group [mailing list](https://groups.google.com/d/forum/phaser3-dev) where progress reports are posted. You can also follow progress in the [Phaser World](#newsletter) newsletter.\n\n![Change Log](http://phaser.io/images/github/div-change-log.png \"Change Log\")\n<a name=\"change-log\"></a>\n\n## Version 2.6.2 - \"Kore Springs\" - 26th August 2016\n\n### New Features\n\n* Group.getRandomExists will return a random child from the Group that has exists set to true.\n* Group.getAll will return all children in the Group, or a section of the Group, with the optional ability to test if the child has a property matching the given value or not.\n* Group.iterate has a new `returnType`: `RETURN_ALL`. This allows you to return all children that pass the iteration test in an array.\n* The property `checkCollision.none` in the ArcadePhysics.Body class was available, but never used internally. It is now used and checked by the `separate` method. By setting `checkCollision.none = true` you can disable all collision and overlap checks on a Body, but still retain its motion updates (thanks @samme #2661)\n* Math.rotateToAngle takes two angles (in radians), and an interpolation value, and returns a new angle, based on the shortest rotational distance between the two.\n* Math.getShortestAngle will return the shortest angle between the two given angles. Angles are in the range -180 to 180, which is what `Sprite.angle` uses. So you can happily feed this method two sprite angles, and get the shortest angle back between them (#2494)\n\n### Updates\n\n* TypeScript definitions fixes and updates (thanks @calvindavis @AlvaroBarua)\n* Docs typo fixes (thanks @rroylance @Owumaro @boniatillo-com @samme @kjav)\n* The InputHandler.flagged property has been removed. It was never used internally, or exposed via the API, so was just overhead.\n* The src/system folder has been removed and all files relocated to the src/utils folder. This doesn't change anything from an API point of view, but did change the grunt build scripts slightly.\n* BitmapData.shadow and BitmapData.text now both `return this` keeping them in-line with the docs (thanks @greeny #2634)\n* Group.align has had its arguments changed so that it's now `(width, height, ...)` instead of `(rows, columns, ...)` (thanks @deargle #2643)\n* Group.align now returns `true` if the Group was aligned, or `false` if not.\n* The Loader.headers object has a new property `requestedWith`. By default this is set to `false`, but it can be used to set the `X-Requested-With` header to `XMLHttpRequest` (or any other value you need). To enable this do `this.load.headers.requestedWith = 'XMLHttpRequest'` before adding anything to the Loader.\n* ScaleManager.hasPhaserSetFullScreen is a new boolean that identifies if the browser is in full screen mode or not, and if Phaser was the one that requested it. As it's possible to enter full screen mode outside of Phaser, and it then gets confused about what bounding parent to use.\n* Phaser.Tileset has a new property `lastgid` which is populated automatically by the TilemapParser when importing Tiled map data, or can be set manually if building your own tileset.\n* Stage will now check if `document.hidden` is available first, and if it is then never even check for the prefixed versions. This stops warnings like \"mozHidden and mozVisibilityState are deprecated\" in newer versions of browsers and retain backward compatibility (thanks @leopoldobrines7 #2656)\n* As a result of changes in #2573 Graphics objects were calling `updateLocalBounds` on any shape change, which could cause dramatic performances drops in Graphics heavy situations (#2618). Graphics objects now have a new flag `_boundsDirty` which is used to detect if the bounds have been invalidated, i.e. by a Graphics being cleared or drawn to. If this is set to true then `updateLocalBounds` is called once in the `postUpdate` method (thanks @pengchuan #2618)\n* Phaser.Image now has the ScaleMinMax component.\n* Animations now allow for speeds greater than 0, rather than forcing them to be greater than 1. This allows you to have animation speeds slower than 1 frame per second (thanks @jayrobin #2664)\n* Weapon.fire and all related methods (fireAtXY, fireAtPointer, fireAtSprite) now all return the instance of the Phaser.Bullet that was fired, or `null` if nothing was fired. Previously it would return a boolean, but this change allows you to perform additional processing on the Bullet as required (thanks @JTronLabs #2696)\n* Sound.loopFull now returns the Sound instance that was looped (thanks @hilts-vaughan #2697)\n* ArcadePhysics Body.rotation now reads its initial value from sprite.angle instead of sprite.rotation. The property was immediately replaced with the correct value in Body.preUpdate regardless, but it keeps it consistent (thanks @samme #2708)\n* Weapon.fire now tracks rotation properly, when using an offset and tracking a sprite (thanks @bobonthenet #2672)\n\n### Bug Fixes\n\n* A Group with `inputEnableChildren` set would re-start the Input Handler on a Sprite, even if that handler had been disabled previously.\n* Weapon.autofire wouldn't fire after the first bullet, or until `fire` was called, neither of which are requirements. If you now set this boolean the Weapon will fire continuously until you toggle it back to false (thanks @alverLopez #2647)\n* ArcadePhysics.World.angleBetweenCenters now uses `centerX` and `centerY` properties to check for the angle between, instead of `center.x/y` as that property no longer exists (thanks @leopoldobrines7 #2654)\n* The Emitter.makeParticles `collide` argument didn't work, as a result of #2661, but is now properly respected thanks to that change (thanks @samme #2662)\n* Sound.play would throw the error \"Uncaught DOMException: Failed to execute 'disconnect' on 'AudioNode': the given destination is not connected.\" in Chrome, if you tried to play an audio marker that didn't exist, while a valid marker was already playing.\n* Text bounds would incorrectly displace if the Text resolution was greater than 1 (thanks @valent-novem #2685)\n* TilemapParser would calculate widthInPixels and heightInPixels were being read incorrectly from JSON data (capitalisation of properties) (thanks @hexus #2691)\n* A tinted Texture in Canvas mode wouldn't be updated properly if it was also cropped, beyond the initial crop. Now a cropped texture will re-tint itself every time the crop is updated, and has changed (thanks @phoenixyjll #2688)\n* The Weapon.fireRateVariance property was never taken into account internally. It's now applied to the firing rate correctly (thanks @noseglid #2715)\n* Text.updateText now sets `Text.dirty = false`, which stops Text objects from having `updateText` called twice on them after creation.\n\n### Pixi Updates\n\nPlease note that Phaser uses a custom build of Pixi and always has done. The following changes have been made to our custom build, not to Pixi in general.\n\n* This version contains significant fixes for `DisplayObject.getBounds` and `DisplayObjectContainer.getBounds`. The methods can now accept an optional argument `targetCoordinateSpace` which makes it much more flexible, allowing you to check the bounds against any target, not just local and global ones. If the `targetCoordinateSpace` is a valid DisplayObject:\n\n    - If it's a parent of the caller at some level it will return the bounds\n    relative to it.\n    - if it's not parenting the caller at all, it will get the global bounds of\n    it, and the caller and will calculate the x and y bounds of the caller\n    relative to the targetCoordinateSpace DisplayObject.\n\nAs a result this also fixes how empty Groups are treated when they have no other children except Groups. So now calculations are correct.\n* DisplayObjectContainer.contains(child) is a new method which determines whether the specified display object is a child of the DisplayObjectContainer instance or the instance itself. This method is used in the new getBounds function.\n* Corrected DisplayObjects default `_bounds` rect from (0, 0, 1, 1) to (0, 0, 0, 0).\n* Thanks to @fmflame for his hard work on the above (#2639 #2627)\n* The methods `setStageReference` and `removeStageReference` have been removed from all Pixi classes. Objects no longer have `stage` properties, or references to the Stage object. This is because no reference to the Stage is required for any calculations, and Phaser can only have 1 Stage, so adding and removing references to it were superfluous actions.\n* The file pixi/utils/Polyk.js has been removed, as it was no longer used with Pixi or Phaser (we replaced it with EarCut a while ago)\n\nFor changes in previous releases please see the extensive [Version History](https://github.com/photonstorm/phaser/blob/master/CHANGELOG.md).\n\n![Contributing](http://phaser.io/images/github/div-contributing.png \"Contributing\")\n<a name=\"contributing\"></a>\n\nThe [Contributors Guide][contribute] contains full details on how to help with Phaser development. The main points are:\n\n- Found a bug? Report it on [GitHub Issues][issues] and include a code sample.\n\n- Pull Requests should only be made against the `dev` branch. *Never* against `master`.\n\n- Before submitting a Pull Request run your code through [JSHint](http://www.jshint.com/) using our [config](https://github.com/photonstorm/phaser/blob/master/.jshintrc).\n\n- Before contributing read the [code of conduct](https://github.com/photonstorm/phaser/blob/master/CODE_OF_CONDUCT.md).\n\nWritten something cool in Phaser? Please tell us about it in the [forum][forum], or email support@phaser.io\n\n![Created by](http://phaser.io/images/github/div-created-by.png \"Created by\")\n\nPhaser is a [Photon Storm](http://www.photonstorm.com) production.\n\n![storm](http://www.phaser.io/images/github/photonstorm-x2.png)\n\nCreated by [Richard Davey](mailto:rich@photonstorm.com). Powered by coffee, anime, pixels and love.\n\nThe Phaser logo and characters are &copy; 2016 Photon Storm Limited.\n\nAll rights reserved.\n\n\"Above all, video games are meant to be just one thing: fun. Fun for everyone.\" - Satoru Iwata\n\n[![Analytics](https://ga-beacon.appspot.com/UA-44006568-2/phaser/index)](https://github.com/igrigorik/ga-beacon)\n\n[get-js]: https://github.com/photonstorm/phaser/releases/download/v2.6.2/phaser.js\n[get-minjs]: https://github.com/photonstorm/phaser/releases/download/v2.6.2/phaser.min.js\n[get-zip]: https://github.com/photonstorm/phaser/archive/v2.6.2.zip\n[get-tgz]: https://github.com/photonstorm/phaser/archive/v2.6.2.tar.gz\n[clone-http]: https://github.com/photonstorm/phaser.git\n[clone-ssh]: git@github.com:photonstorm/phaser.git\n[clone-svn]: https://github.com/photonstorm/phaser\n[clone-ghwin]: github-windows://openRepo/https://github.com/photonstorm/phaser\n[clone-ghmac]: github-mac://openRepo/https://github.com/photonstorm/phaser\n[phaser]: https://github.com/photonstorm/phaser\n[issues]: https://github.com/photonstorm/phaser/issues\n[examples]: https://github.com/photonstorm/phaser-examples\n[contribute]: https://github.com/photonstorm/phaser/blob/master/.github/CONTRIBUTING.md\n[forum]: http://www.html5gamedevs.com/forum/14-phaser/\n\n[game1]: https://www.prodigygame.com/Fun-Math-Games/\n[game2]: http://www.bbc.co.uk/cbbc/games/deadly-defenders-game\n[game3]: http://www.defiantfew.com/\n[game4]: http://www.pawpatrol.com/fun.php\n[game5]: http://www.fyretale.com/\n[game6]: http://www.pocoyo.com/juegos-ninos/caramelos\n[game7]: http://www.html5gamedevs.com/topic/11179-phaser-cocoonjs-tap-tap-submarine/\n[game8]: http://www.gamepix.com/project/footchinko/\n[game9]: http://orcattack.thehobbit.com\n[game10]: http://phaser.io/news/2015/06/bubble-academy\n[game11]: http://phaser.io/news/2015/07/woodventure\n[game12]: http://phaser.io/news/2015/04/hopsop-journey-to-the-top\n[game13]: http://phaser.io/news/2015/05/banana-mania\n[game14]: http://phaser.io/news/2015/06/salazar-the-alchemist\n[game15]: http://phaser.io/news/2015/05/phaser-shmup\n[game16]: http://phaser.io/news/2015/05/trappy-trap\n[game17]: http://phaser.io/news/2015/04/runaway-ruins\n[game18]: http://phaser.io/news/2015/04/ananias\n",
  "readmeFilename": "README.md",
  "release": "Kore Springs",
  "repository": {
    "type": "git",
    "url": "git+https://photonstorm@github.com/photonstorm/phaser.git"
  },
  "scripts": {
    "test": "NODE_ENV=test grunt jshint"
  },
  "typescript": {
    "definitions": [
      "typescript/p2.d.ts",
      "typescript/phaser.comments.d.ts",
      "typescript/pixi.comments.d.ts"
    ]
  },
  "typings": "./typescript/typings.json",
  "version": "2.6.2"
}
